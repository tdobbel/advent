#!/usr/bin/env bash

declare -A gains
declare -A buyer

best_dec=(0 0 0 0) 
part1=0
prev=
price=
key=


next-number() {
    local mixed
    ((mixed = (secret << 6) ^ secret))
    ((secret = mixed & ((1 << 24) - 1)))
    ((mixed = (secret >> 5) ^ secret))
    ((secret = mixed & ((1 << 24) - 1)))
    ((mixed = (secret << 11) ^ secret))
    ((secret = mixed & ((1 << 24) - 1)))
}

while read -r secret; do
    unset buyer
    ((prev = secret % 10))
    key=0
    for ((i = 0; i < 2000; ++i)); do
        next-number
        ((price = secret % 10))
        ((key = ((key << 5) | (price - prev + 9)) & 0xFFFFF))
        ((prev = price))
        ((i < 3)) && continue
        [[ -z "${buyer[$key]}" ]] && buyer["$key"]="$price"
    done
    ((part1 += secret))
    for k in "${!buyer[@]}"; do
        ((gains["$k"] += buyer["$k"]))
    done
done

part2=0
best_enc=0
for k in "${!gains[@]}"; do
    value=${gains["$k"]}
    if ((value > part2)); then
        part2=$value
        best_enc=$k
    fi
done

for ((i = 0; i < 4; ++i)); do
    ((best_dec[$((3 - i))] = (best_enc & 0x1F) - 9))
    ((best_enc >>= 5))
done

echo "Part 1: $part1"
echo "Part 2: $part2 with (${best_dec[*]})"
