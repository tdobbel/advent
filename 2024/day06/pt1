#!/usr/bin/env bash

show_grid() {
    local x y
    for ((y=0; y<height; y++)); do
        for ((x=0; x<width; x++)); do
            key="$x,$y"
            echo -n "${grid[$key]}"
        done
        echo
    done
}

declare -A grid
declare -A visited

y=0
width=0
guard_x=-1
guard_y=-1
direction="up"
while read -r line; do
    width=${#line}
    for ((x=0; x<width; x++)); do
        key="$x,$y"
        c=${line:$x:1}
        grid[$key]=$c
        if [[ $c == "^" ]]; then
            guard_x=$x
            guard_y=$y
        fi
    done
    ((y++))
done
height=$y
((visited[$guard_x,$guard_y]++))

if [[ $guard_x == -1 || $guard_y == -1 ]]; then
    echo "Guard not found"
    exit 1
fi

while true; do

    case $direction in
        "up")
            shift_x=0
            shift_y=-1
            ;;
        "down")
            shift_x=0
            shift_y=1
            ;;
        "left")
            shift_x=-1
            shift_y=0
            ;;
        "right")
            shift_x=1
            shift_y=0
            ;;
        *)
            echo "Invalid direction: $direction"
            exit 1
            ;;
    esac
    new_x=$((guard_x + shift_x))
    new_y=$((guard_y + shift_y))
    key="$new_x,$new_y"
    if (( new_x < 0 || new_x >= width || new_y < 0 || new_y >= height )); then
        echo "The guard has left the grid"
        break
    fi
    if [[ ${grid[$key]} == "#" ]]; then
        case $direction in
            "up")
                direction="right"
                ;;
            "down")
                direction="left"
                ;;
            "left")
                direction="up"
                ;;
            "right")
                direction="down"
                ;;
        esac
    else
        grid["$guard_x,$guard_y"]="."
        guard_x=$new_x
        guard_y=$new_y
        grid["$guard_x,$guard_y"]="^"
        ((visited[$guard_x,$guard_y]++))
    fi
done

echo "Visited ${#visited[@]} unique locations"
