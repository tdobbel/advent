#!/usr/bin/env bash

N=10
operations=("add" "multiply" "concatenate")

apply_operation() {
    local op=$1
    local x=$2
    local y=$3
    case $op in 
        "add")
            echo $((x + y))
            ;;
        "multiply")
            echo $((x * y))
            ;;
        "concatenate")
            echo "${x}${y}"
            ;;
        *)
            echo "Invalid operation"
            return 1
            ;;
    esac
}

ispossible() {
    local result=$1
    local x=$2
    local nop=$3
    local numbers=("${@:4}")
    local n=${#numbers[@]}
    if ((n == 0)); then
        if (( result == x )); then echo true; else echo false; fi
        return
    fi
    local y=${numbers[0]}
    for ((i=0; i < $nop; i++)); do
        local op=${operations[i]}
        local z=$(apply_operation "$op" "$x" "$y")
        if ((z > result)); then
            continue
        fi
        if $(ispossible "$result" "$z" "$nop" "${numbers[@]:1}"); then
            echo true
            return
        fi
    done
    echo false
}

process_line() {
    local cntr=$1
    local numbers=(${@:2})
    echo "Processing line $cntr: ${numbers[@]}"
    local result=${numbers[0]}
    local result=${result::-1}
    local numbers=(${numbers[@]:1})
    local part1=0
    local part2=0
    if $(ispossible "$result" "${numbers[0]}" 2 "${numbers[@]:1}"); then
        part1=$result
        part2=$result
    elif $(ispossible "$result" "${numbers[0]}" 3 "${numbers[@]:1}"); then
        part2=$result
    fi
    echo "$part1 $part2" > $(printf "output_%04d.txt" "$cntr")
}

main() {
    local cntr=0
    while read -r line; do
        ((cntr++))
        process_line "$cntr" "$line" & 
        if [[ $(jobs -r -p | wc -l) -ge $N ]]; then wait -n; fi
    done
    wait
    local part1=0
    local part2=0
    for ((i=1; i <= cntr; i++)); do
        filename=$(printf "output_%04d.txt" "$i")
        read inc1 inc2 < "$filename"
        part1=$((part1 + inc1))
        part2=$((part2 + inc2))
        rm "$filename"
    done
    echo "Part 1: $part1"
    echo "Part 2: $part2"
}

main
