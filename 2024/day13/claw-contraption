#!/usr/bin/env bash

pattern='([A-Za-z ]+): X[\+=]([0-9]+), Y[\+=]([0-9]+)'

declare xa ya xb yb sol

solve-system() {
    local det na nb
    sol=0
    ((det = xa * yb - xb * ya))
    ((det == 0)) && return
    ((na = (x * yb - xb * y) / det))
    ((nb = (xa * y - x * ya) / det))

    ((na < 0 || nb < 0)) && return
    if ((na * xa + nb * xb == x && na * ya + nb * yb == y)); then
        ((sol = na * 3 + nb))
    fi

}

part1=0
part2=0

while read -r line; do
    ((${#line} == 0)) && continue
    if [[ $line =~ $pattern ]]; then
        case "${BASH_REMATCH[1]}" in
        "Button A")
            xa=${BASH_REMATCH[2]}
            ya=${BASH_REMATCH[3]}
            ;;
        "Button B")
            xb=${BASH_REMATCH[2]}
            yb=${BASH_REMATCH[3]}
            ;;
        "Prize")
            x=${BASH_REMATCH[2]}
            y=${BASH_REMATCH[3]}
            solve-system
            ((part1 += sol))
            ((x += 10000000000000))
            ((y += 10000000000000))
            solve-system
            ((part2 += sol))
            ;;
        *)
            echo "Could not parse line: $line"
            exit 1
            ;;
        esac
    fi

done

echo "Part 1: $part1"
echo "Part 2: $part2"
